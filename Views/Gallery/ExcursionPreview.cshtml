@model GalleryViewModel
<div class="row mt-3">
    <h1>"@Model.exc.Название"</h1>
    @if (Model.exc.Тип.Contains("User"))
    {
        <h4>Автор: @Model.allUsers.FirstOrDefault(u => u.Id.ToString() == Model.exc.Тип.Split('-')[1]).Name</h4>
    }
</div>
<div class="row mt-3">
    <h3>Об экскурсии</h3>
    <p>@Model.exc.Аннотация</p>
</div>
<form method="post" action="/Gallery/ExcursionFlow" name="Form">
    <input class=" mb-3 mt-3" required hidden name="value" value="@Model.exc.id" size="10" id="excurs" />
    <p>
        <input hidden name="picIndex" value="0" />
        <input hidden name="roomIndex" value="0" />
        <button class="btn btn-light">Начать экскурсию</button>
    </p>
</form>
<div class="row mt-1">
    <div class="row align-items-center">
        <form class="col-auto align-self-end " method="post" action="/Gallery/LikeExcur">
            <input hidden name="id" value="@Model.exc.id" />
            @if (UserViewModel.userInfo != null && UserViewModel.userInfo.LikedExcurs.Contains(Model.exc.id))
            {
                <input class="col-1" type="image" style="width: 25px; height: auto" src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Emoji_u2665.svg/2048px-Emoji_u2665.svg.png" />
                <input hidden name="act" value="dislike" />
            }
            else
            {
                <input class="col-1" type="image" style="width: 25px; height: auto" src="http://cdn.onlinewebfonts.com/svg/img_510341.png" />
                <input hidden name="act" value="like" />
            }
            <span class="col">@Model.allExcurLikes.Where(e => e.ExcurId == Model.exc.id).Count()</span>
        </form>
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        <form class="col" method="post" action="/Gallery/LeaveCommentExcur">
            <input hidden name="id" value="@Model.exc.id" />
            <div class="d-flex bd-highlight">
                <textarea required rows="3" name="comment" class="p-2 flex-grow-1 bd-highlight" placeholder="Оставьте комментарий..."></textarea>
                <button class="p-2 align-self-end bd-highlight">Отправить</button>
            </div>
        </form>
    }
    else
    {
        <div class="d-flex bd-highlight">
            <a class="p-2 align-self-end flex-fill bd-highlight btn btn-light" aria-current="page" href="/Account/Login">Чтобы оставить комментарий, авторизируйтесь</a>
        </div>
    }
</div>
<div class="row mt-3 align-items-end">
    <h4>Комментарии</h4>
    @foreach (var x in Model.allExcurComments.Where(e => e.ExcurId == Model.exc.id).OrderByDescending(c => c.PublishDate))
    {
        <p class="col-auto" align="Left" style="font-size: x-large; font-style: oblique">@Model.allUsers.FirstOrDefault(u => u.Id == x.UserId).Name:</p>
        <p class="col-auto  flex-grow-1 " align="Left" style="font-size: large">@x.Comment</p>
        <p class="col-auto" align="Left" style="font-size: medium; font-style: italic">@x.PublishDate.ToString()</p>
        <div class="dropdown-divider"></div>
        <div class="w-100"></div>
    }
</div>
<div class="fixed-bottom m-5 d-flex justify-content-end">
    <p><a href="#top">Наверх@*<img src="up.png" align=right>*@</a></p>
</div>