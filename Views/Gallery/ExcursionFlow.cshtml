@model GalleryViewModel
@{
    List<Dictionary<string, string>> room = null;
}

<div class="offcanvas offcanvas-start bg-light" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
    <div class="d-flex flex-column">
        <div class="offcanvas-header">
            <h4 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">Содержание</h4>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Закрыть"></button>
        </div>
        <div class="flex-column flex-fill offcanvas-body">
            <div class="mx-3">
                @{
                    int num = 0;
                    int roomIndex = 0;
                    string title = "";
                    for (int x = 0; x < Model.exc.content.Count; x++)
                    {
                        room = Model.exc.content[x];
                        for (int i = 0; i < room.Count; i++)
                        {
                            num = i + 1;
                            roomIndex = x + 1;
                            if (room[i]["title"] != null && room[i]["title"] != "")
                            {
                                title = room[i]["title"];
                            }
                            else
                            {
                                title = "Зал №" + roomIndex + " Часть " + num;

                            }
                            if (x == Model.roomFlowIndex && i == Model.excFlowIndex)
                            {
                                <a class="row link-success fw-bold d-flex justify-content-start" href="ExcursionFlow?value=@Model.id&picIndex=@i&roomIndex=@x">@title</a>
                            }
                            else
                            {
                                <a class="row link-secondary d-flex justify-content-start" style="" href="ExcursionFlow?value=@Model.id&picIndex=@i&roomIndex=@x">@title</a>
                            }
                        }
                        <div class="dropdown-divider"></div>
                    }
                }
            </div>
        </div>
    </div>
</div>
<div class="row mt-3 justify-content-center">
    <div class="col-10">
        @{
            string toRead = "";

            room = Model.exc.content[Model.roomFlowIndex];
            if (room[Model.excFlowIndex]["title"] != null && room[Model.excFlowIndex]["title"] != "")
            {
                <div class="row mt-3">
                    <h4 style="text-align: center">@room[Model.excFlowIndex]["title"]</h4>
                </div>
            }
            else
            {
                roomIndex = Model.roomFlowIndex + 1;
                <div class="row mt-3">
                    <h4 style="text-align: center">Зал №@roomIndex</h4>
                </div>

            }
            @if (room[Model.excFlowIndex]["picNo"].Split(',').Where(l => l != "").Count() > 0)
            {
                <div class="row">
                    <div class="col-7 row d-flex justify-content-center">
                        @foreach (var x in room[Model.excFlowIndex]["picNo"].Split(',').Where(l => l != ""))
                        {
                            <div class="card col-6 mx-1 mb-2 p-0" style="background-color:transparent">
                                @{Картина pic = Model.allPictures.FirstOrDefault(p => p.Инвентарный_номер.ToString() == x);                                }

                                <input style='border:5px solid; border-color: lightgrey; max-height:350px' type="image" onclick="on(this.id)" id="@pic.Инвентарный_номер" class="card-img-custom card-img-top img-fluid d-flex align-self-start border-1 rounded" src="~/img/Pictures/@pic.ЦифроваяВерсия" />
                                <div class="card-body p-2 d-flex align-content-end flex-wrap justify-content-center">
                                    <p class="card-text" id="mainInfo_@pic.Инвентарный_номер">"@pic.Название" (@pic.ГодСоздания) - @Model.allAuthors.FirstOrDefault(a => a.Код_автора == pic.Автор).ФИО, @Model.allCountries.FirstOrDefault(c => c.Код_страны == pic.СтранаСоздания).НазваниеСтраны</p>
                                    <p class="d-flex justify-content-center">
                                        <button class="card-link btn btn-outline-success" onclick="on(this.id)" id="@pic.Инвентарный_номер">Увеличить</button>
                                    </p>
                                </div>
                            </div>

                        }
                    </div>
                    <div class="col-5 row mt-3 mx-auto w-70">
                        @foreach (var x in room[Model.excFlowIndex]["text"].Split('\n'))
                        {
                            <span class="mb-2" style="white-space: pre-wrap; text-indent: 3em;">@x</span>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-8 row mt-3 mx-auto w-70" style="">
                        @foreach (var x in room[Model.excFlowIndex]["text"].Split('\n'))
                        {
                            <span class="mb-2" style="white-space: pre-wrap; text-indent: 3em;">@x</span>
                        }
                    </div>
                </div>
            }
            toRead = room[Model.excFlowIndex]["text"];

        }
    </div>
</div>
<div class="fixed-bottom row justify-content-start">
    <nav class="col-2 navbar navbar-light bg-transparent">
        <div class="container-fluid p-0">
            <div class="p-0 btn btn-outline-secondary navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="true" aria-label="Переключатель навигации">
                <button class="p-1 btn btn-outline-secondary">
                    Показать/ скрыть панель навигации
                </button>
            </div>
        </div>
    </nav>
    <div class="collapse show" id="navbarToggleExternalContent" style="background-color: #212529">
        <div class="mt-3 mb-3 mx-3 row bg-transparent p-0">
            <div class="col-2">
                <button class="flex-grow-1 btn btn-outline-success" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasWithBothOptions" aria-controls="offcanvasWithBothOptions">Содержание</button>
            </div>
            <div class="col-8 row d-flex justify-content-center">
                <div class="col-4">
                    <form method="post" class="d-flex justify-content-around" action="/Gallery/ChangeShowpiece">
                        <input hidden name="pIndex" value="@Model.excFlowIndex" />
                        <input hidden name="value" value="@Model.id" />
                        <input hidden name="rIndex" value="@Model.roomFlowIndex" />
                        <input hidden name="text" value="@toRead" />
                        @if (!(Model.roomFlowIndex == 0 && Model.excFlowIndex == 0))
                        {
                            <button class="flex-grow-1 btn btn-outline-secondary" name="type" value="prev">Назад</button>
                        }
                        @if (Model.isReading)
                        {
                            <button class="flex-grow-1 btn btn-outline-secondary" id="btnSample" name="type" value="pause">Пауза</button>
                        }
                        else
                        {
                            <button class="flex-grow-1 btn btn-outline-secondary" id="btnSample" name="type" value="read">Прочитать</button>
                        }
                        @if (Model.roomFlowIndex == Model.exc.lastRoomIndex && Model.excFlowIndex == Model.exc.lastPartIndex)
                        {
                            <button class="flex-grow-1 btn btn-outline-secondary" name="type" value="end">Завершить экскурсию</button>

                        }
                        else
                        {
                            <button class="flex-grow-1 btn btn-outline-secondary" name="type" value="next">Вперед</button>
                        }
                    </form>
                </div>
            </div>
            <div class="col-2 d-flex justify-content-center">
                <a href="#top" class="flex-grow-1 btn btn-outline-success">Наверх@*<img src="up.png" align=right>*@</a>
            </div>
        </div>
    </div>
</div>
<style>
    #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
        cursor: pointer;
    }

    #text {
        position: absolute;
        top: 20%;
        left: 50%;
        font-size: 20px;
        color: white;
        transform: translate(-50%,-20%);
        -ms-transform: translate(-50%,-20%);
    }
</style>

<div id="overlay" onclick="off()" style="overflow-y: scroll">
    <div class="row mt-5 d-flex justify-content-center" id="text">
        <div class="col-10 d-flex justify-content-center"><img id="PicImg" class="img-fluid" style="width:stretch; " /></div>
        <h6 class="text-center" id="overlay_main_pic_info"></h6>
    </div>
</div>

<script>
    function on(id) {
        document.getElementById("overlay").style.display = "block";
        document.getElementById("overlay_main_pic_info").textContent = document.getElementById("mainInfo_" + id).textContent;
        document.getElementById("PicImg").src = "../../img/Pictures/" + id + ".jpg";
        document.getElementById("PicImg").style.maxHeight = (screen.height * 0.7).toString() + "px";
    }

    function off() {
        document.getElementById("overlay").style.display = "none";
    }
</script>
