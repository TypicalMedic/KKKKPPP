using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace KKKKPPP.Data
{
    public static class SQLQueryRepository
    {
        public static Dictionary<string, string> queries = new Dictionary<string, string>
        {
            {"Общее количество картин в галерее на данный момент", 
                @"SELECT count(Инвентарный_номер) AS [Общее количество картин в галерее]
FROM Картина
WHERE Статус in(1,2);" },
            {"Список картин в каждом зале",
                @"SELECT ЗначениеЗала AS Зал, ISNULL(CAST(Инвентарный_номер as varchar),'Зал пуст') AS [Инвентарный номер картины],Название, Состояние_картины.Состояние
FROM Состояние_картины RIGHT JOIN (SELECT * FROM Картина RIGHT JOIN (SELECT * FROM Зал LEFT JOIN (SELECT * FROM (SELECT Картина, Место FROM Экспонат LEFT JOIN Экспозиция ON Экспонат.Экспозиция = Экспозиция.Код_экспозиции WHERE Экспозиция.Статус = 'Проводится')  AS nt LEFT JOIN Место ON Место.ЗначениеМеста = nt.Место)  AS nt1 ON nt1.Зал = Зал.ЗначениеЗала)  AS nt2 ON nt2.Картина = Картина.Инвентарный_номер)  AS nt3 ON nt3.Состояние = Состояние_картины.Код_состояния
ORDER BY ЗначениеЗала;" },
            {"Количество картин в удовлетворительном состоянии",
                @"SELECT count(Состояние) AS [Количество картин в удовлетворительном состоянии]
FROM Картина
WHERE Состояние = 1 and Статус in(1,2);" },
            {"Список картин в удовлетворительном состоянии",
                @"SELECT Инвентарный_номер, Название, ДатаПриема
FROM Картина
WHERE Состояние = 1 and Статус in(1,2);" },
            {"Количество картин, нуждающихся в любой реставрации",
                @"SELECT count(Инвентарный_номер) AS [Количество картин, нуждающихся в реставрации]
FROM Картина
WHERE Статус in(1,2) and Состояние in(2,3);" },
            {"Список картин, нуждающихся в любой реставрации",
                @"SELECT Инвентарный_номер, Название, ДатаПриема, Состояние_картины.Состояние
FROM Картина LEFT JOIN Состояние_картины ON Картина.Состояние= Состояние_картины.Код_состояния
WHERE Статус in(1,2) and Картина.Состояние in(2,3)
ORDER BY Инвентарный_номер asc;" },
            {"Процент картин в удовлетворительном состоянии",
                @"SELECT FORMAT(CAST(restp as float)/allp, 'P') AS [Процент картин в удовлетворительном состоянии]
FROM
(SELECT count(Инвентарный_номер) as allp FROM Картина WHERE Статус in(1,2)) as nt,
(SELECT count(Инвентарный_номер) as restp FROM Картина WHERE Состояние = 1 and Статус in(1,2)) as nt1;" },
            {"Список поступивших в этом году на постоянное хранение картин",
                @"SELECT Инвентарный_номер, Название, ДатаПриема
FROM Картина
WHERE YEAR(GETDATE()) = YEAR(ДатаПриема) and Статус = 2;" },
            {"Количество картин, поступивших в этом году, группируя по виду передачи (постоянное, временное хранение)",
                @"SELECT nt1.Статус, count(Инвентарный_номер) AS [Количество картин, поступивших в этом году]
FROM (SELECT * FROM Картина WHERE YEAR(GETDATE()) = YEAR(ДатаПриема))  AS nt RIGHT JOIN (SELECT * FROM Статус_картины WHERE Статус_картины.Код_статуса in(1,2))  AS nt1 ON nt.Статус = nt1.Код_статуса
GROUP BY nt1.Статус;" },
            {"Список утерянных при проверке картин",
                @"SELECT Инвентарный_номер, Название, ДатаПриема
FROM Картина
WHERE Статус = 4;" },
            {"Изменение состояния картин, если они изменились в аналитическом отчете",
                @"UPDATE Картина SET Картина.Состояние = nt.Код_состояния_картины
FROM Картина INNER JOIN Аналитический_отчет nt 
ON Картина.Инвентарный_номер = nt.Инвентарный_номер;" },
            {"Изменение статуса потерянных картин на «Потеряна»",
                @"UPDATE Картина SET Картина.Статус = 4
FROM Картина LEFT JOIN Аналитический_отчет
ON Аналитический_отчет.Инвентарный_номер = Картина.Инвентарный_номер 
WHERE Аналитический_отчет.Инвентарный_номер is null and Картина.Статус <> 3 " }
            //{"?", 
            //    @"" }
        };
    }
}
